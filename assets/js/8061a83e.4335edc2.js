"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[1267],{1174:e=>{e.exports=JSON.parse('{"version":{"pluginId":"reference","version":"current","label":"Next","banner":null,"badge":false,"noIndex":false,"className":"docs-version-current","isLast":true,"docsSidebars":{"referenceSidebar":[{"type":"link","label":"The Move Reference","href":"/reference/","docId":"index","unlisted":false},{"type":"category","label":"Getting Started","items":[{"type":"link","label":"1. Modules","href":"/reference/modules","docId":"modules","unlisted":false}],"collapsed":false,"collapsible":false},{"type":"category","label":"Basic Concepts","items":[{"type":"category","label":"2. Primitive Types","items":[{"type":"link","label":"2.1 Integers","href":"/reference/primitive-types/integers","docId":"primitive-types/integers","unlisted":false},{"type":"link","label":"2.2 Bool","href":"/reference/primitive-types/bool","docId":"primitive-types/bool","unlisted":false},{"type":"link","label":"2.3 Address","href":"/reference/primitive-types/address","docId":"primitive-types/address","unlisted":false},{"type":"link","label":"2.4 Vector","href":"/reference/primitive-types/vector","docId":"primitive-types/vector","unlisted":false},{"type":"link","label":"2.5 References","href":"/reference/primitive-types/references","docId":"primitive-types/references","unlisted":false},{"type":"link","label":"2.6 Tuples and Unit","href":"/reference/primitive-types/tuples","docId":"primitive-types/tuples","unlisted":false}],"collapsed":false,"collapsible":false,"href":"/reference/primitive-types"},{"type":"link","label":"3. Local Variables and Scopes","href":"/reference/variables","docId":"variables","unlisted":false},{"type":"link","label":"4. Equality","href":"/reference/equality","docId":"equality","unlisted":false},{"type":"category","label":"5. Abort and Assert","items":[{"type":"link","label":"5.1 Clever Errors","href":"/reference/abort-and-assert/clever-errors","docId":"abort-and-assert/clever-errors","unlisted":false}],"collapsed":false,"collapsible":false,"href":"/reference/abort-and-assert"},{"type":"category","label":"6. Control Flow","items":[{"type":"link","label":"6.1 Conditional Expressions","href":"/reference/control-flow/conditionals","docId":"control-flow/conditionals","unlisted":false},{"type":"link","label":"6.2 Loops","href":"/reference/control-flow/loops","docId":"control-flow/loops","unlisted":false},{"type":"link","label":"6.3 Labeled Control Flow","href":"/reference/control-flow/labeled-control-flow","docId":"control-flow/labeled-control-flow","unlisted":false},{"type":"link","label":"6.4 Pattern Matching","href":"/reference/control-flow/pattern-matching","docId":"control-flow/pattern-matching","unlisted":false}],"collapsed":false,"collapsible":false,"href":"/reference/control-flow"},{"type":"category","label":"7. Functions","items":[{"type":"link","label":"7.1 Macros","href":"/reference/functions/macros","docId":"functions/macros","unlisted":false}],"collapsed":false,"collapsible":false,"href":"/reference/functions"},{"type":"link","label":"8. Structs","href":"/reference/structs","docId":"structs","unlisted":false},{"type":"link","label":"9. Enums","href":"/reference/enums","docId":"enums","unlisted":false},{"type":"link","label":"10. Constants","href":"/reference/constants","docId":"constants","unlisted":false},{"type":"link","label":"11. Generics","href":"/reference/generics","docId":"generics","unlisted":false},{"type":"link","label":"12. Abilities","href":"/reference/abilities","docId":"abilities","unlisted":false},{"type":"link","label":"13. Uses and Aliases","href":"/reference/uses","docId":"uses","unlisted":false}],"collapsed":false,"collapsible":false},{"type":"category","label":"Advanced Concepts","items":[{"type":"link","label":"14. Method Syntax","href":"/reference/method-syntax","docId":"method-syntax","unlisted":false},{"type":"link","label":"15. Index Syntax","href":"/reference/index-syntax","docId":"index-syntax","unlisted":false}],"collapsed":false,"collapsible":false},{"type":"category","label":"Tooling","items":[{"type":"link","label":"16. Packages","href":"/reference/packages","docId":"packages","unlisted":false},{"type":"link","label":"17. Unit Testing","href":"/reference/unit-testing","docId":"unit-testing","unlisted":false}],"collapsed":false,"collapsible":false},{"type":"category","label":"Reference","items":[{"type":"link","label":"18. Coding Conventions","href":"/reference/coding-conventions","docId":"coding-conventions","unlisted":false}],"collapsed":false,"collapsible":false},{"type":"category","label":"Deprecated","items":[{"type":"link","label":"19. Friends","href":"/reference/friends","docId":"friends","unlisted":false}],"collapsed":false,"collapsible":false}]},"docs":{"abilities":{"id":"abilities","title":"Reference: Abilities","description":"","sidebar":"referenceSidebar"},"abilities/object":{"id":"abilities/object","title":"Reference: Sui Objects","description":""},"abort-and-assert":{"id":"abort-and-assert","title":"Reference: Abort and Assert","description":"","sidebar":"referenceSidebar"},"abort-and-assert/clever-errors":{"id":"abort-and-assert/clever-errors","title":"Reference: Clever Errors","description":"Clever errors are a feature that allows for more informative error messages when an assertion fails or an abort is raised","sidebar":"referenceSidebar"},"coding-conventions":{"id":"coding-conventions","title":"Reference: Coding Conventions","description":"","sidebar":"referenceSidebar"},"constants":{"id":"constants","title":"Reference: Constants","description":"","sidebar":"referenceSidebar"},"control-flow":{"id":"control-flow","title":"Reference: Control Flow","description":"","sidebar":"referenceSidebar"},"control-flow/conditionals":{"id":"control-flow/conditionals","title":"Reference: Conditional Expressions","description":"","sidebar":"referenceSidebar"},"control-flow/labeled-control-flow":{"id":"control-flow/labeled-control-flow","title":"Reference: Labeled Control Flow","description":"","sidebar":"referenceSidebar"},"control-flow/loops":{"id":"control-flow/loops","title":"Reference: Loops","description":"","sidebar":"referenceSidebar"},"control-flow/pattern-matching":{"id":"control-flow/pattern-matching","title":"Reference: Pattern Matching","description":"","sidebar":"referenceSidebar"},"enums":{"id":"enums","title":"Reference: Enumerations","description":"","sidebar":"referenceSidebar"},"equality":{"id":"equality","title":"Reference: Equality","description":"","sidebar":"referenceSidebar"},"friends":{"id":"friends","title":"Reference: Friends","description":"","sidebar":"referenceSidebar"},"functions":{"id":"functions","title":"Reference: Functions","description":"","sidebar":"referenceSidebar"},"functions/macros":{"id":"functions/macros","title":"Reference: Macro Functions","description":"","sidebar":"referenceSidebar"},"generics":{"id":"generics","title":"Reference: Generics","description":"","sidebar":"referenceSidebar"},"index":{"id":"index","title":"The Move Reference","description":"Welcome to Move, a next generation language for secure asset programming. Its primary use case is in","sidebar":"referenceSidebar"},"index-syntax":{"id":"index-syntax","title":"Reference: Index Syntax","description":"","sidebar":"referenceSidebar"},"method-syntax":{"id":"method-syntax","title":"Reference: Method Syntax","description":"","sidebar":"referenceSidebar"},"modules":{"id":"modules","title":"Reference: Modules","description":"","sidebar":"referenceSidebar"},"packages":{"id":"packages","title":"Reference: Packages","description":"","sidebar":"referenceSidebar"},"primitive-types":{"id":"primitive-types","title":"Reference: Primitive Types","description":"","sidebar":"referenceSidebar"},"primitive-types/address":{"id":"primitive-types/address","title":"Reference: Address","description":"","sidebar":"referenceSidebar"},"primitive-types/bool":{"id":"primitive-types/bool","title":"Reference: Bool","description":"","sidebar":"referenceSidebar"},"primitive-types/integers":{"id":"primitive-types/integers","title":"Reference: Integers","description":"","sidebar":"referenceSidebar"},"primitive-types/references":{"id":"primitive-types/references","title":"Reference: References","description":"","sidebar":"referenceSidebar"},"primitive-types/tuples":{"id":"primitive-types/tuples","title":"Reference: Tuples and Unit","description":"","sidebar":"referenceSidebar"},"primitive-types/vector":{"id":"primitive-types/vector","title":"Reference: Vector","description":"","sidebar":"referenceSidebar"},"structs":{"id":"structs","title":"Reference: Structs","description":"","sidebar":"referenceSidebar"},"unit-testing":{"id":"unit-testing","title":"Reference: Unit Tests","description":"","sidebar":"referenceSidebar"},"uses":{"id":"uses","title":"Reference: Uses and Aliases","description":"","sidebar":"referenceSidebar"},"variables":{"id":"variables","title":"Reference: Local Variables and Scope","description":"","sidebar":"referenceSidebar"}}}}')}}]);